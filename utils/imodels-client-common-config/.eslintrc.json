{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "import"
  ],
  "rules": {
    "indent": [
      "error",
      2
    ],
    "linebreak-style": [
      "error",
      "unix"
    ],
    "quotes": [
      "error",
      "double"
    ],
    "semi": [
      "error",
      "always"
    ],
    "eol-last": [
      "error",
      "always"
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "object"
        ],
        "pathGroups": [
          {
            "pattern": "@itwin/imodels-client**",
            "group": "internal"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "builtin"
        ],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "no-trailing-spaces": [
      "error"
    ],
    "comma-dangle": [
      "error",
      "never"
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "property",
        "modifiers": [
          "private"
        ],
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "require"
      },
      {
        "selector": "typeParameter",
        "format": [
          "PascalCase"
        ],
        "filter": {
          "regex": "TiModel",
          "match": false
        },
        "prefix": [
          "T"
        ]
      },
      {
        "selector": [
          "variableLike"
        ],
        "format": [
          "strictCamelCase"
        ],
        "leadingUnderscore": "allow"
      },
      {
        "selector": [
          "typeLike"
        ],
        "format": [
          "StrictPascalCase"
        ],
        "filter": {
          "regex": "^(iModel.*)$",
          "match": false
        }
      }
    ]
  }
}