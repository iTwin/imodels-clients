parameters:
  - name: shouldPublish
    displayName: Publish packages to public NPM registry
    type: boolean
    default: false

name:
  $(Date:yyyy.M.d)$(Rev:.r)

trigger: none

jobs:
  - job: BuildTestSBXAndPublish
    strategy:
      matrix:
        linux:
          imageName: 'ubuntu-latest'
        mac:
          imageName: 'macos-latest'
        windows:
          imageName: 'windows-latest'
    pool:
        vmImage: $(imageName)
    variables:
      - group: iModels Clients - Integration Tests - SBX
    workspace:
      clean: all

    steps:
    - task: NodeTool@0
      displayName: Install Node@14.17.5
      inputs:
        versionSpec: '14.17.5'
        checkLatest: true
        
    - script: node common/scripts/install-run-rush.js install --purge
      displayName: rush install
    
    - script: node common/scripts/install-run-rush.js rebuild -v
      displayName: rush rebuild
    
    - script: node common/scripts/install-run-rush.js lint
      displayName: rush lint
    
    - script: node common/scripts/install-run-rush.js spell-check
      displayName: rush spell-check
    
    - script: npm run test:integration
      displayName: npm run test:integration
      workingDirectory: tests/imodels-clients-tests
      env:
        AUTH_CLIENT_ID: $(AUTH_CLIENT_ID)
        AUTH_CLIENT_SECRET: $(AUTH_CLIENT_SECRET)
        TEST_USERS_ADMIN1_EMAIL: $(TEST_USERS_ADMIN1_EMAIL)
        TEST_USERS_ADMIN1_PASSWORD: $(TEST_USERS_ADMIN1_PASSWORD)
        TEST_USERS_ADMIN2_FULLY_FEATURED_EMAIL: $(TEST_USERS_ADMIN2_FULLY_FEATURED_EMAIL)
        TEST_USERS_ADMIN2_FULLY_FEATURED_PASSWORD: $(TEST_USERS_ADMIN2_FULLY_FEATURED_PASSWORD)

    - script: node common/scripts/install-run-rush.js publish --pack --include-all --publish
      displayName: rush publish (into .tgz)

    - task: PublishBuildArtifacts@1
      displayName: publish .tgz as build artifacts
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)/common/temp/artifacts/packages'
        ArtifactName: packages

    - script: node common/scripts/install-run-rush.js publish --publish --include-all --set-access-level public
      displayName: rush publish package
      condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'), eq(variables['Build.SourceBranch'], 'refs/heads/main'), ${{ parameters.shouldPublish }} )
      env:
        NPM_AUTH_TOKEN: $(npmToken)
